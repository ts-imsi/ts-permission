<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE mapper PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
        "http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="Dynamic">

    <insert id="insert_t_operation" parameterType="map">
        <selectKey resultType="Integer" keyProperty="pkid">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_operation (parent_id,name,url,app_id,user_id,px,created) values
        (#{parentId},#{name},#{url},#{appId},#{userId},#{px},#{created});
    </insert>

    <insert id="insert_t_role" parameterType="map">
        <selectKey resultType="Integer" keyProperty="pkid">
            SELECT LAST_INSERT_ID()
        </selectKey>
        insert into t_role (name,app_id,user_id,created) values
        (#{name},#{appId},#{userId},#{created});
    </insert>

    <delete id="delete_t_operation" parameterType="Integer">
        delete from t_operation where pkid=#{pkid};
        delete from t_operation where parent_id=#{pkid};
    </delete>

    <delete id="delete_t_role" parameterType="Integer">
        delete from t_role where pkid=#{pkid};
    </delete>
    <update id="update_t_operation" parameterType="map">
        update t_operation set name=#{name},px=#{px},url=#{url} where pkid=#{pkid};
    </update>

    <update id="update_t_role" parameterType="map">
        update t_role set name=#{name} where pkid=#{pkid};
    </update>

    <update id="update_t_user" parameterType="map">
        update t_user set status=#{status} where name=#{name}
    </update>

    <select id="getRoleManages" parameterType="map" resultType="map">
        SELECT a.pkid,a.name,a.app_id AS appId,a.user_id AS userId,
        b.pkid as roleScopeId,b.name AS scopeName,
        b.scope_sign AS scopeSign,b.scope_url AS scopeUrl
         FROM t_role a
         LEFT JOIN t_role_scope b ON a.pkid = b.role_id and a.app_id = b.app_id
         WHERE a.app_id = #{appId}
         <if test="name!=null">
          AND a.name LIKE '%${name}%'
        </if>
    </select>

    <select id="getNameIsExist" parameterType="map" resultType="Integer">
        SELECT COUNT(1) AS count FROM ${tableName} where name =#{name} and app_id = #{appId}
        <if test="permission!='undefined' and permission!=null">
            AND permission = #{permission}
        </if>
    </select>

    <insert id="saveOrUpdateRoleOperation" parameterType="map">
        delete from t_role_operation where role_id=#{roleId} and app_id=#{appId};
        insert into t_role_operation (operation_id,role_id,app_id,created,modified)
        values
        <foreach collection="list" index="index" item="item" separator="," >
            (#{item},#{roleId},#{appId},now(),now())
        </foreach>

    </insert>

    <sql id="user_sql">
        SELECT a.name ,a.user_id as userId,a.app_id AS appId,a.permission,
        (CASE a.status WHEN 0 THEN '禁用' ELSE '正常' END)  AS status,
        GROUP_CONCAT(b.role_id ORDER BY b.role_id ASC) AS roleId,
        GROUP_CONCAT(c.name ORDER BY b.role_id ASC) as roleName ,
        a.display_name as displayName
        FROM t_user a
        LEFT JOIN t_user_role b ON a.name = b.uid and a.app_id = b.app_id
        LEFT JOIN t_role c ON c.pkid = b.role_id and b.app_id = c.app_id
        WHERE 1=1
        AND a.app_id = #{appId} AND permission = 3

    </sql>
    <sql id="groupStr">
        GROUP BY a.name
    </sql>
    <select id="getTotalCount" parameterType="map" resultType="Integer">
        SELECT COUNT(1) AS count FROM (
        <include refid="user_sql"/>
        <if test="name!=null">
            AND  a.name LIKE '%${name}%'
        </if>
        <include refid="groupStr"/>
        <if test="roleName!=null">
            HAVING  roleName LIKE '%${roleName}%'
        </if>
        ) a
    </select>
    <select id="getUserRoleList" parameterType="map" resultType="map">
        <include refid="user_sql"/>
        <if test="name!=null">
            AND  a.name LIKE '%${name}%'
        </if>
        <include refid="groupStr"/>
        <if test="roleName!=null">
            HAVING  roleName LIKE '%${roleName}%'
        </if>
        <if test="pageSize!=null and startRecord!=null">
            limit #{pageSize} offset #{startRecord}
        </if>
    </select>

    <select id="getRoles" parameterType="map" resultType="map">
        SELECT pkid , name FROM t_role WHERE user_id != 0
        <if test="permission!=null and permission!=1 and appId!=null">
            AND app_id = #{appId}
        </if>
    </select>

    <insert id="insert_t_user_role" parameterType="map">
        delete from t_user_role where uid=#{uid} and app_id=#{appId};
        insert into t_user_role (uid,role_id,app_id,user_id,created,modified)
        values
        <foreach collection="roleIds" index="index" item="item" separator="," >
            (#{uid},#{item},#{appId},#{userId},now(),now())
        </foreach>
    </insert>

    <select id="getUserTotal" parameterType="map" resultType="Integer">
        SELECT COUNT(1) AS count FROM t_user where 1=1
        AND app_id = #{appId} AND permission !=1
        <if test="name!=null">
            AND  name LIKE '%${name}%'
        </if>
    </select>
    <select id="getUserList" parameterType="map" resultType="map">
        SELECT a.name ,a.user_id as userId,a.app_id AS appId,
        (CASE a.permission WHEN 1 THEN '系统管理员' WHEN 2 THEN '应用管理员' ELSE '操作管理员' END)  AS permission,
        (CASE a.status WHEN 0 THEN '禁用' ELSE '正常' END)  AS status,
        a.display_name as displayName
        FROM t_user a
        where 1=1
        AND a.app_id = #{appId} AND a.permission !=1
        <if test="name!=null">
            AND  a.name LIKE '%${name}%'
        </if>
        <if test="pageSize!=null and startRecord!=null">
            limit #{pageSize} offset #{startRecord}
        </if>
    </select>
    <update id="updatePermission" parameterType="map">
        update t_user set permission=#{permission} where name=#{name};
    </update>




</mapper>